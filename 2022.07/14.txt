목록(List) 태그

    (1)순서가 있는 목록(list) <ol> 태그

        <ol> 태그의 type에 따라 하위 목록들의 순서 마커가 정해지고, start에 따라 마커의 시작 값이 정해진다.
        기본 값은 숫자(1, 2, 3, ...)이다.

*** type, start 대신 CSS3 스타일을 사용할 것을 권장***

<ol type="1"|"A"|"a"|"I"|"i"
    start="value">
    <li>아이템</li>
    <li>아이템</li>
</ol>

-type : 마커 종류
        type="1" (디폴트) 1, 2, 3, ...
        type="A" A, B, C, ...
        type="a" a, b, c, ...
        type="I" I, II, III, ...
        type="i" i, ii, iii, ...

-start : 마커의 시작 값
        start="C" C, D, E, ...
        start="5" 5, 6, 7, ...

    (2) 순서가 없는 목록(List) <ul> 태그

<ul>태그는 순서가 없기 때문에 type에 마커의 순서가 아닌 모양을 표시하는 값을 넣는다.
또한 순서가 없기 때문에 시작 값 지정(start) 속성이 없다.

*** type 대신 CSS3 스타일을 사용할 것을 권장 ***

<ul type="disc" | "square" | "circle">
        <li>아이템</li>
        <li>아이템</li>
</ul>

-type : 마커 종류
        type="disc" (디폴트)●, ●, ●, ...
        type="square" ■, ■, ■, ...
        type="circle" ○, ○, ○, ...

html 공간배치 3 semantic

html5에서는웹페이지의 레이아웃만을 위한 별도의 새로운 Tag들을 제공하는데 이 Tag들을 의미(semantic)tag 라고 한다.
의미(semantic)이란 웹브라우저나 개발자에게 명확한 의미를 전달하는  tag이다.
예를 들어 <header> Tag를 보면 의미적으로 헤더를 정의하고 웹브라우저, 개발자에게 헤더부분이라고 명시하는 역할을 한다.
하지만 주의할 점은 <header> Tag를 쓴다고 해서 밑의 그림처럼 레이아웃을 만들어 주지는 않는다.
단지 의미를 부여할 뿐 레이아웃은 CSS3로 작업한다.

<header> 
문서 또는 섹션의 머리글을 정의
페이지나 섹션의 머리말 표현
페이지 제목, 페이지를 소개하는 간단한 설명

<nav> 
탐색 링크를 위한 컨테이너를 정의
하이퍼 링크들을 모아 놓은 특별한 섹션
페이지 내 목차를 만드는 용도

<section> 
문서의 섹션 정의
문서의 장(chapter, section) 혹은 절을 구성하는 역할
일반 문서에 여러 잠이 있듯이 웹 페이지에 여러 <section> 가능
해당 태그<h1>~<h6>를 사용하여 절 혹은 섹션의 주제 기입

<article> 
독립적인 독립 기사 정의
본문과 연관 있지만, 독립적인 콘텐츠를 담는 영역
혹은 보조 기사, 블로그 포스트, 댓글 등 기타 독립적인 내용
<artcle>에 담는 내용이 많은 경우 여러 <section> 돌 수 있다.

<aside> 
사이드 바 처럼 콘텐츠를 제외하고 콘텐츠를 정의
본문에서 약간 벗어난 노트나 팁
신문, 잡지에서 주요 기사 옆 관련 기사, 삽입 어구로 표시된 논평 등
페이지의 오른쪽이나 왼쪽에 주로 배치된다.
<footer> 
문서 또는 섹션의 바닥글을 정의
꼬리말 영역, 주로 저자나 저작권 정보

html 공간 배치 - float&clear

float 속성은 실무 내에서 레이아웃 설계하는 과정에서 많이 사용되는 속성이다.
복잡한 형태의 레이아웃을 구성하는데 필요한 핵심 속성으로 특정 요소를 떠있게, 흐르도록 하는 속성이다.
div(float : left;) : 요소를 왼쪽 방향으로
div(float : right;) : 요소를 오른쪽 방향으로
div(float : none;) : 기본값(default), 요소를 띄우지 않는다.
보통 문서를 왼쪽에서 오른쪽으로 밀기 때문에 float : left의 사용 빈도가 더 높다.

1. 블록 요소인 div 태그는 한 자리를 가득 차지 하고 있다.
2. 다른 요소와 나란히놓기 위해 css에 float를 준다. 그러면 div의 가로값은 최소 크기로 변하게 된다.
 float 상태가 된 div 크기가 줄면서 빈 공간이 생기고 빈공간의 뒤에 있던 오렌지 div가 올라오게 된다.
3. 두 개의 div에 모두 float를 주면 모두 최소 크기로 변경되면서 빈공간이 생기고 그 뒤에 또 다른 객체가 있다면 따라 올라오게 된다.
cf) 만약 float를 사용하지 않고 가로(width)를 사용하면 요소들을 나란히 둘 수 있을 것 같지만 실제로는 알 ㅐ상태가 된다.
오른 쪽 처럼 한 자리를 다 차지한 상태인 것

error
0714_sementic.html 단계에서 
% 빠짐
body부분에서 클래스만 지정하고 이름을 적지 않아 표출이 되지않음.